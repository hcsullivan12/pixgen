# Generates time-dependent events in the DUNE 10kt 1x2x6 geometry

#include "marley.fcl"
#include "services_dune.fcl"

process_name: MARLEYTimeGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "marley_time_hist.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::dunefd_simulation_services
  Geometry: @local::dune10kt_1x2x6_geo
}


#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:  100         # Number of events to create
  firstRun:   1           # Run number to use for this file
  firstEvent: 1           # Number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   # Generate events using MARLEY
   generator: { @table::standard_marley
                module_type: "MARLEYTimeGen"
                sampling_mode: "histogram"
                nu_per_event: 1

                spectrum_file: "SupernovaModels/Huedepohl-Accretion-LS220-s11.2_parameters.dat"
                spectrum_file_format: "fit"
                pinching_parameter_type: "alpha"
                fit_Emin: 0. # MeV
                fit_Emax: 100. # MeV

                #spectrum_file: "nusperbin2d.root"
                #spectrum_file_format: "th2d"
                #namecycle: "nusperbin2d_nue"
              }
   # Save the state of the LArSoft random number generators
   rns:       { module_type: "RandomNumberSaver" }
 }

 # define the producer and filter modules for this path, order matters, filters
 # reject all following items.  see lines starting physics.producers below
 simulate: [ rns, generator ]
 
 # define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 # trigger_paths is a keyword and contains the paths that modify the
 # art::event, ie filters and producers
 trigger_paths: [simulate]

 # end_paths is a keyword and contains the paths that do not modify the
 # art::Event, ie analyzers and output streams.  these all run simultaneousy
 end_paths:     [stream1]
}

# block to define where the output goes.  if you defined a filter in the
# physics block and put it in the trigger_paths then you need to put a
# SelectEvents: {SelectEvents: [XXX]} entry in the output stream you want those
# to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   # default file name, can override from command line with -o or --output
   fileName:    "marley_time_gen.root"
 }
}
