#include "pixsim_genie.fcl"
#include "pixsim_largeantmodules.fcl"
#include "pixsim_services.fcl"
#include "pixsim_anamodules.fcl"
#include "pixsim_detsimmodules.fcl"
#include "pixsim_filtermodules.fcl"

process_name: GenieGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "genie_hist.root" }
  TimeTracker:  {}
  MemoryTracker:         { } # default is one
  IFDH: {}
  RandomNumberGenerator: {} #ART native random number generator
                @table::pixsim_simulation_services
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::dunefd_genie_hist
   largeant:  @local::pixsim_largeant	       
   rns:       { module_type: "RandomNumberSaver" }
 }

 filters:
 {
   emptyevent: @local::pixsim_emptyeventfilter
 }

 analyzers:
 {
   #myana:    @local::pixsim_ana
 }


 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, rns, emptyevent ] 

 ana: [ ] #myana ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana, stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "genie_gen.root" #default file name, can override from command line with -o or --output  
   compressionLevel: 1
   SelectEvents: [simulate]
 }
}

physics.producers.generator.TopVolume: "volLArActive"
