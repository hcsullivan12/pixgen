#include "pixsim_services.fcl"

process_name: SinglesGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "single_histo_muon.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  #              @table::lariat_simulation_services
  
  @table::pixsim_simulation_services 
  NuRandomService: @local::random_NuRandomService
}


#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  maxEvents:   200          # Number of events to create
  firstRun:    1            # Run number to use for this file
  firstEvent:  1            # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
   generator: @local::pixsim_singlep	  
   largeant:  @local::pixsim_largeant	  
   rns:       { module_type: "RandomNumberSaver" }
 }

 analyzers:
{
}

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, rns ] 
 
 ana: [ ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana, stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: [XXX]
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "single_muon.root" #default file name, can override from command line with -o or --output
   dataTier:    "reconstructed-2d"
   compressionLevel: 1
 }
}

physics.producers.generator.PDG: [13]
physics.producers.generator.P0: [ 0.75]
physics.producers.generator.SigmaP: [0.25]
physics.producers.generator.PDist: 0
physics.producers.generator.X0: [25]
physics.producers.generator.Y0: [0]
physics.producers.generator.Z0: [-100]
physics.producers.generator.T0: [0]
physics.producers.generator.SigmaX: [10]
physics.producers.generator.SigmaY: [10]
physics.producers.generator.SigmaZ: [0]
physics.producers.generator.SigmaT: [0]
physics.producers.generator.PosDist: 0
physics.producers.generator.Theta0XZ: [0]
physics.producers.generator.Theta0YZ: [0]
physics.producers.generator.SigmaThetaXZ: [5.0]
physics.producers.generator.SigmaThetaYZ: [3.3]
physics.producers.generator.AngleDist: 0

