# Generates events in the DUNE 10kt workspace geometry (4 APAs)

#include "marley.fcl"
#include "services_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "caldata_dune.fcl"

process_name: MarleyGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "marley_hist.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
                @table::dunefd_simulation_services
}


#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:  100         # Number of events to create
  firstRun:   1           # Run number to use for this file
  firstEvent: 1           # Number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   # Generate events using MARLEY
   generator: @local::standard_marley
   # Track particles in the detector using Geant4
   largeant:  @local::dunefd_largeant
   # Simulate TPC wire responses
   daq:       @local::dunefd_simwire       
   # Convert raw::RawDigit objects to recob:wire objects
   caldata:   @local::dunefd_calwire
   # Use cheated reconstruction to produce recob:Hit objects
   #hitcheat:  @local::dunefd_hitcheater
   # Save the state of the LArSoft random number generators
   rns:       { module_type: "RandomNumberSaver" }
 }

 # define the producer and filter modules for this path, order matters, filters
 # reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, daq, caldata, rns ]
 
 # define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 # trigger_paths is a keyword and contains the paths that modify the
 # art::event, ie filters and producers
 trigger_paths: [simulate]

 # end_paths is a keyword and contains the paths that do not modify the
 # art::Event, ie analyzers and output streams.  these all run simultaneousy
 end_paths:     [stream1]
}

# block to define where the output goes.  if you defined a filter in the
# physics block and put it in the trigger_paths then you need to put a
# SelectEvents: {SelectEvents: [XXX]} entry in the output stream you want those
# to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   # default file name, can override from command line with -o or --output
   fileName:    "marley_gen.root"
 }
}

# Make sure that the geometry is what we think it is
services.Geometry: @local::dune10kt_workspace_geo

# Adjustments to the standard LArG4 parameters
services.LArG4Parameters.ParticleKineticEnergyCut: 1.0e-5 # GeV
services.LArG4Parameters.StoreTrajectories: true
services.LArG4Parameters.KeepEMShowerDaughters: true
# Use NeutronHP data (very important for neutrino-induced neutron emission!)
# which is not enabled by default in LArSoft.
services.LArG4Parameters.UseCustomPhysics: true
services.LArG4Parameters.EnabledPhysics: [ "LowEnergyEm",
                                           "SynchrotronAndGN",
                                           "Ion",
                                           "NeutronHP",
                                           "Decay",
                                           "HadronElastic",
                                           "Stopping" ]
